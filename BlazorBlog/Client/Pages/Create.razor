@page "/create"
@using System.Text.Json;
@inject BlazorBlog.Client.Services.IBlogService blogService
@inject NavigationManager Navigationmanager
@using BlazorBlog.Shared;
<h3>Create a new BLog Post</h3>

<EditForm Model="@newBlogPost" OnValidSubmit="CreateNewBlogPost">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for=" title">
            Title
        </label>
        <InputText id="title" @bind-Value="newBlogPost.Title" class="form-control"></InputText>
        <ValidationMessage For="@(() => newBlogPost.Title)" />
    </div>


        <div class="form-control-file mt-2">
            <label for="image">Image</label>
            <InputFile OnChange="OnFileChange"></InputFile>
        </div>

    <div class="form-group">
        <label for="content">
            Url
        </label>
        <InputText id="url" @bind-Value="newBlogPost.Url" class="form-control"></InputText>
        <ValidationMessage For="@(() => newBlogPost.Url)" />
    </div>

    <div class="form-group">
        <label for="author">
            Author
        </label>
        <InputText id="author" @bind-Value="newBlogPost.Author" class="form-control"></InputText>
    </div>


    <div class="form-group">
        <label for="description">
            Description
        </label>
        <InputText id="description" @bind-Value="newBlogPost.Description" class="form-control"></InputText>
    </div>

    <div class="form-group">
        <label for="dateCreated">
            Date
        </label>
        <InputDate id="dateCreated" @bind-Value="newBlogPost.DateCreated" class="form-control"></InputDate>
    </div>

    <div class="form-check">
        <InputCheckbox id="isPublished" @bind-Value="newBlogPost.IsPublished" class="form-check-input"></InputCheckbox>
        <label for="isPublished">
            Published
        </label>
    </div>

    <div class="form-group">
        <label for="content">
            Content
        </label>
        <InputTextArea id="content" @bind-Value="newBlogPost.Content" class="form-control"></InputTextArea>
    </div>

    <button type="submit" class="btn btn-primary mt-5">Create</button>
</EditForm>

@code {
    BlogPost newBlogPost = new BlogPost();
    async Task CreateNewBlogPost()
    {
        var result = await blogService.CreateNewBlogPost(newBlogPost);
        Navigationmanager.NavigateTo($"posts/{result.Url}");

    }

    async Task OnFileChange(InputFileChangeEventArgs e)
    {
        var format = "image/png";
        var resizeImage = await e.File.RequestImageFileAsync(format, 300, 300);
        var buffer = new byte[resizeImage.Size];
        await resizeImage.OpenReadStream().ReadAsync(buffer);
        var imageData = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
        newBlogPost.Image = imageData;
    }
}
